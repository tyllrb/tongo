/***********************************

	POST operations

************************************/

/* Create a new collection */
Tongo.collection ('profiles');

/* Define a document template */
Tongo.template ('Profile', {
	'userId': Number,
	'username': String,
	'password': String,
	'pic': 'default.png',
	'order': {
		'drink': String,
		'food': String
	},
	'likes': [1, 2],
	'notifications': [],
	'age': Number,
	'banned': false
});

/* Insert a new instance of a document */
Tongo.fork ('Profile').post({
	'username': 'Tyler',
	'password': 'pass',
	'order.drink': 'Pepsi'
})
.into ('profiles')
.then (function (doc) {
	// doc is the freshly created document
});

/* Insert a new document */
Tongo.post({
	'username': 'Tyler',
	'comment': 'Cool :)'
})
.into ('comments')
.then (function (doc) {
	// doc is the freshly created document
});

/* User comments on a product, anybody who has liked the product will get a notification of the users new comment */
Tongo.post({
	'username': 'Tyler',
	'productId': productId,
	'body': 'Cool message',
})
.into ('comments')
.then (function (doc) {
	Tongo.put ({'notifications:add': 'Tyler commented!'})
	.where ({'likes:has': productId})
	.into ('profiles')
	.then (function () {
		// success
	});
});


/***********************************

	GET operations

************************************/

/* Get all documents from a collection */
Tongo.get ().from ('profiles')
.then (function (profiles) {
	// array of profiles
});

/* Get the usernames and ages from all documents from a collection */
Tongo.get ('username', 'age').from ('profiles')
.then (function (usernames) {
	// array of usernames and ages
});

/* Get all usernames of the users who are older than 18 */
Tongo.get ('username').where ({'age': '>=18'}).from ('profiles')
.then (function (usernames) {
	// array of usernames
});

/* Get the ten oldest users profiles */
Tongo.get ().descending ('age').limit (10).from ('profiles')
.then (function (profiles) {
	//array of profiles
});

/* Woah, pretty fucking cool */
Tongo.get ().where ({'productId': 42}).from ('products', 'comments')
.then (function (product, comment) {

});

/* Quickly check if there is any document in the collection that has a given field with specified value */
Tongo.exists ({'username': 'Tyler'}).from ('profiles')
.then (function (yes) {
	// if yes is true it exists, if false then it does not
});



/***********************************

	PUT operations

************************************/

/* Update certain field in all documents in collection */
Tongo.put ({'banned': true}).into ('profiles')
.then (function (doc) {
	// array of the updated documents
});

/* Update certain fields in some particular document(s) in collection */
Tongo.put ({'banned': true}).where ({'username': 'Tyler'}).into ('profiles')
.then (function (doc) {
	// array of the updated documents
});

/* Add '2' to the likes array in all the documents */
Tongo.put ({'likes:add', 2}).into ('profiles')
.then (function (doc) {
	// the updated doc
});

/* Array operations are like so: */

	{'likes:add', 2} // add '2' to the array
	{'likes:delete': 3} // delete any occurance of '3' in the array
	{'likes:deleteAt': 0} // delete the value at index 0 in the array



/***********************************

	DELETE operations

************************************/

/* Delete a document based on some criteria */
Tongo.delete ().where ({'username': 'Tyler'}).from ('profiles')
.then (function (doc) {
	// the deleted document
});

/* Delete all documents in a collection */
Tongo.delete ().from ('profiles')
.then (function (docs) {
	// array of all the deleted docs
});

/* Delete a particular field from every document in the collection */
Tongo.delete ('age').from ('profiles');

/* Delete errrting */
Tongo.delete ()



/***********************************

	other operations

************************************/

Tongo.