{"name":"Tongo","tagline":"Node module for chaining together long complex mongodb queries","body":"### Welcome to GitHub Pages.\r\nTongo lets you construct complex and chained mongoose database queries with a simple SQL like approach to syntax. Building out big queries that rely on the results of other queries is much easier, and a simple internal cache system will automatically return the results of a query that has already been executed previously. But enough of the flowery appraisal, lets take a look at some code! \r\n\r\n### Getting values\r\nGetting values are pretty straightforward\r\n    tongo.get('value1').from('er').where({'bob': 1}).then((results) => {\r\n        console.log(results);\r\n    });\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}